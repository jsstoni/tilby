// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  token       String     @default(uuid())
  userId      String     @map("user_id")
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")
  Payment     Payment[]
  Taxe        Taxe[]
  Product     Product[]
  Category    Category[]
  User        User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("store")
}

model Payment {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  active      Boolean
  description String?
  apiKey      String?  @map("api_key")
  privateKey  String?  @map("private_key")
  urlCallback String?  @map("url_callback")
  storeId     Int      @map("store_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  Store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@map("payment")
}

model Taxe {
  id        Int      @id @default(autoincrement())
  country   String
  rate      Int
  storeId   Int      @map("store_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  Store     Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)

  @@map("taxe")
}
